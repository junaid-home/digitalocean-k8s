name: CI
on: 
  push:
    branches:
      - main
jobs:
  build: 
    runs-on: ubuntu-latest 

    strategy:
      matrix: 
        node-version: [14.x]

    steps:
      - name: clone this ropo to runner
        uses: actions/checkout@v2

      - name: install and setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: authenticate with docker-hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: set up docker cross platform builder
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
          
      - name: build and publish client docker-image
        id: client_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./client/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/react-client:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/react-client:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: print client docker-image hash
        run: echo ${{ steps.client_build.outputs.digest }}

      - name: build and publish server docker-image
        id: server_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./server/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/node-server:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/node-server:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: print server docker-image hash
        run: echo ${{ steps.server_build.outputs.digest }}
